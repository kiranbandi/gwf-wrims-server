

define Womens_Coulee {std kind 'STORAGE' units 'TAF'} 
define WClevel1_elev {select level3 from res_level where month=month, res =1}
define WClevel1 {select storage from res_elev given elev = WClevel1_elev use linear where res=1}
define WC_1 {std kind 'STORAGE-ZONE' units 'TAF'}
goal WCZone1 {WC_1 < WClevel1/1000}
define WClevel2_elev {select level2 from res_level where month=month, res =1}
define WClevel2 {select storage from res_elev given elev = WClevel2_elev use linear where res=1}
define WC_2 {std kind 'STORAGE-ZONE' units 'TAF'}
goal WCZone2 {WC_2 < (WClevel2/1000)-(WClevel1/1000)}
define WClevel3_elev {select level1 from res_level where month=month, res =1}
define WClevel3 {select storage from res_elev given elev = WClevel3_elev use linear where res=1}
define WC_3 {std kind 'STORAGE-ZONE' units 'TAF'}
goal WCZone3 {WC_3 < (WClevel3/1000)-(WClevel2/1000)}
goal storage1 {Womens_Coulee=WC_1+WC_2 + WC_3}
define evap1 {timeseries kind 'EVAPORATION-RATE' units 'IN'}
define elev1 {select elev from res_elev given storage = Womens_Coulee(-1) * 1000 use linear where res=1}
!constrain elevation to within the full reservoir storage
define newelev1 {
case above_capacity {
                condition elev1 - evap1 > 154.33
				value   154.33
}
case below_capacity {
                condition elev1 - evap1 < 0
				value   0
}

case otherwise {
                condition always
				value elev1 - evap1
}
}

define newstorage1 {select storage from res_elev given elev = newelev1 use linear where res=1}
define E1 {lower unbounded kind 'EVAPORATION' units 'CFS'}
goal evaporation1 {E1= taf_cfs*((Womens_Coulee(-1) * 1000- newstorage1)/1000)}


define Twin_Valley {std kind 'STORAGE' units 'TAF'} 
define TVlevel1_elev {select level3 from res_level where month=month, res =2}
define TVlevel1 {select storage from res_elev given elev = TVlevel1_elev use linear where res=2}
define TV_1 {std kind 'STORAGE-ZONE' units 'TAF'}
goal TVZone1 {TV_1 < TVlevel1/1000}
define TVlevel2_elev {select level2 from res_level where month=month, res =2}
define TVlevel2 {select storage from res_elev given elev = TVlevel2_elev use linear where res=2}
define TV_2 {std kind 'STORAGE-ZONE' units 'TAF'}
goal TVZone2 {TV_2 < (TVlevel2/1000)-(TVlevel1/1000)}
define TVlevel3_elev {select level1 from res_level where month=month, res =2}
define TVlevel3 {select storage from res_elev given elev = TVlevel3_elev use linear where res=2}
define TV_3 {std kind 'STORAGE-ZONE' units 'TAF'}
goal TVZone3 {TV_3 < (TVlevel3/1000)-(TVlevel2/1000)}
goal storage2 {Twin_Valley=TV_1+TV_2 + TV_3}
define evap2 {timeseries kind 'EVAPORATION-RATE' units 'IN'}
define elev2 {select elev from res_elev given storage = Twin_Valley(-1) * 1000 use linear where res=2}

!constrain elevation to within the full reservoir storage
define newelev2 {
case above_capacity {
                condition elev2 - evap2 > 866.14
				value   866.14
}
case below_capacity {
                condition elev2 - evap2 < 0
				value   0
}

case otherwise {
                condition always
				value elev2 - evap2
}
}
define newstorage2 {select storage from res_elev given elev = newelev2 use linear where res=2}

define E2 {lower unbounded kind 'EVAPORATION' units 'CFS'}
goal evaporation2 {E2= taf_cfs* ((Twin_Valley(-1) * 1000 - newstorage2)/1000)}

